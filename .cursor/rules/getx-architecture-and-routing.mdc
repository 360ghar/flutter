---
globs: lib/app/**/*.dart
---
# GetX Architecture & Routing

## Controllers & Views
- Use `GetxController` for business logic • Keep UI in Views
- Initialize in `onInit` • Clean up in `onClose`
- Use `SafeGetView<T>` for typed controller access
- Prefer dependency injection via bindings, not `Get.put`

## Bindings & Modules
- One binding per module: `lib/app/modules/<feature>/bindings/<feature>_binding.dart`
- Register with `Get.lazyPut(() => Controller())`
- Structure: `{views,controllers,bindings,widgets}`

## Routes & Navigation
- Define routes in `app_routes.dart` • Register pages in `app_pages.dart`
- Navigate with `Get.toNamed()` • Pop with `Get.back()`
- Use middlewares for auth guards

```dart
GetPage(
  name: Routes.home,
  page: () => const HomeView(),
  binding: HomeBinding(),
  middlewares: [AuthMiddleware()],
)
```