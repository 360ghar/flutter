#!/usr/bin/env bash
set -euo pipefail

RED='\033[0;31m'
YELLOW='\033[0;33m'
GREEN='\033[0;32m'
NC='\033[0m'

# Allow skipping (e.g., SKIP_HOOKS=1 git commit ...)
if [[ "${SKIP_HOOKS:-}" == "1" ]]; then
  echo -e "${YELLOW}‚è≠  Pre-commit hooks skipped via SKIP_HOOKS=1${NC}"
  exit 0
fi

echo -e "${YELLOW}‚è≥ Running formatter (imports + fixes + format)...${NC}"
if ! tool/format.sh; then
  echo -e "${RED}‚ùå Formatting failed. Please fix and try again.${NC}"
  exit 1
fi

# Restage any changes done by formatter
git add -A

echo -e "${YELLOW}üîç Running analyzer (will block only on errors)...${NC}"
TMP_REPORT=$(mktemp -t analyze.XXXXXX)

# Prefer repo-local Flutter SDK for analyzer
if [[ -x ".fvm/flutter_sdk/bin/flutter" ]]; then
  FLT=".fvm/flutter_sdk/bin/flutter"
elif command -v flutter >/dev/null 2>&1; then
  FLT="$(command -v flutter)"
else
  FLT="flutter" # best-effort fallback
fi

if "$FLT" analyze >"$TMP_REPORT" 2>&1; then
  echo -e "${GREEN}‚úÖ No analyzer issues found.${NC}"
  rm -f "$TMP_REPORT"
  exit 0
fi

# Check if there are errors (not just warnings/infos)
if grep -q "error ‚Ä¢" "$TMP_REPORT"; then
  echo -e "${RED}‚ùå Analyzer errors detected. Commit aborted.${NC}"
  cat "$TMP_REPORT"
  rm -f "$TMP_REPORT"
  exit 1
else
  echo -e "${YELLOW}‚ö†Ô∏è  Analyzer reported warnings/infos, proceeding with commit.${NC}"
  cat "$TMP_REPORT"
  rm -f "$TMP_REPORT"
  exit 0
fi
